// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "category": "test",
        "confirmation_required": "test",
        "delivery": "test",
        "description": "test",
        "displayName": "test",
        "full_day_price": "10",
        "half_day_price": "5",
        "id": "1",
        "image": "test",
        "instructions": "test",
        "name": "test",
        "ownerImage": "test",
        "region": "test",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={2}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onEndReachedThreshold={0.2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[Function]}
      refreshing={false}
    />
  }
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <RCTRefreshControl />
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
          }
        }
      >
        <RCTScrollView
          automaticallyAdjustContentInsets={false}
          contentContainerStyle={
            Array [
              Object {
                "padding": 10,
              },
              undefined,
            ]
          }
          contentInset={
            Object {
              "bottom": 0,
            }
          }
          enableAutomaticScroll={true}
          enableOnAndroid={false}
          enableResetScrollToCoords={true}
          extraHeight={75}
          extraScrollHeight={0}
          getScrollResponder={[Function]}
          handleOnScroll={[Function]}
          keyboardDismissMode="interactive"
          keyboardOpeningTime={250}
          keyboardShouldPersistTaps="handled"
          keyboardSpace={0}
          onScroll={[Function]}
          padder={true}
          resetKeyboardSpace={[Function]}
          resetScrollToCoords={
            Object {
              "x": 0,
              "y": 0,
            }
          }
          scrollEventThrottle={1}
          scrollForExtraHeightOnAndroid={[Function]}
          scrollIntoView={[Function]}
          scrollToEnd={[Function]}
          scrollToFocusedInput={[Function]}
          scrollToPosition={[Function]}
          showsVerticalScrollIndicator={true}
          style={
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            }
          }
          update={[Function]}
          viewIsInsideTabBar={false}
        >
          <View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "borderBottomWidth": 0.5,
                  "borderColor": "#ccc",
                  "borderLeftWidth": 0.5,
                  "borderRadius": 2,
                  "borderRightWidth": 0.5,
                  "borderTopWidth": 0.5,
                  "elevation": 3,
                  "flexWrap": "nowrap",
                  "marginBottom": 5,
                  "marginLeft": 2,
                  "marginRight": 2,
                  "marginTop": 5,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.1,
                  "shadowRadius": 1.5,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  bordered={true}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fff",
                        "borderBottomWidth": 0.5,
                        "borderColor": "#ccc",
                        "borderRadius": 2,
                        "flexDirection": "row",
                        "paddingBottom": 10,
                        "paddingLeft": 15,
                        "paddingRight": 15,
                        "paddingTop": 10,
                      },
                      Object {
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#000",
                        "fontFamily": "System",
                        "fontSize": 16,
                      }
                    }
                  >
                     
                    test
                     
                  </Text>
                </View>
                <View
                  cardBody={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fff",
                      "borderRadius": 2,
                      "flexDirection": "row",
                      "paddingBottom": -5,
                      "paddingLeft": -5,
                      "paddingRight": -5,
                      "paddingTop": -5,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "uri": "test",
                      }
                    }
                    style={
                      Object {
                        "flex": 1,
                        "height": 250,
                      }
                    }
                  />
                </View>
                <View
                  bordered={true}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fff",
                        "borderBottomWidth": 0.5,
                        "borderColor": "#ccc",
                        "borderRadius": 2,
                        "flexDirection": "row",
                        "paddingBottom": 10,
                        "paddingLeft": 15,
                        "paddingRight": 15,
                        "paddingTop": 10,
                      },
                      Object {
                        "justifyContent": "space-evenly",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#000",
                        "fontFamily": "System",
                        "fontSize": 16,
                      }
                    }
                  >
                     Full day: $
                    10
                     
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#000",
                        "fontFamily": "System",
                        "fontSize": 16,
                      }
                    }
                  >
                     Half day: $
                    5
                     
                  </Text>
                </View>
                <View
                  style={
                    Array [
                      Object {},
                      Object {
                        "padding": 10,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    forwardedRef={[Function]}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#5cb85c",
                        "borderBottomWidth": null,
                        "borderColor": "#007aff",
                        "borderLeftWidth": null,
                        "borderRadius": 0,
                        "borderRightWidth": null,
                        "borderTopWidth": null,
                        "borderWidth": undefined,
                        "elevation": 2,
                        "flexDirection": "row",
                        "height": 45,
                        "justifyContent": "center",
                        "opacity": 1,
                        "paddingBottom": 6,
                        "paddingTop": 6,
                        "shadowColor": undefined,
                        "shadowOffset": undefined,
                        "shadowOpacity": undefined,
                        "shadowRadius": undefined,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontFamily": "System",
                          "fontSize": 16.5,
                          "marginLeft": 0,
                          "marginRight": 0,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                        }
                      }
                    >
                      View
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </RCTSafeAreaView>
    </View>
  </View>
</RCTScrollView>
`;
